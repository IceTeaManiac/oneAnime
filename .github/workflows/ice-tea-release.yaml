name: "ice-tea-release"

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug

jobs:
  flutter-build-linux:
    name: "Release for Linux"
    runs-on: "ubuntu-latest"
    permissions: write-all
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Extract short sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        shell: bash
      - name: Echo build progress
        run: echo "oneAnime_linux_${{ env.short_sha }}.tar.gz build progress"
        shell: bash
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake libgtk-3-dev ninja-build libayatana-appindicator3-dev mpv unzip libmpv-dev libasound2-dev
        shell: bash
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml
      - run: flutter --version
      - name: Get Flutter dependencies
        run: flutter pub get
        shell: bash
      - name: Build Flutter for Linux
        run: flutter build linux
        shell: bash
      - name: Download OpenCC Assets
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'Predidit/open_chinese_convert_bridge'
          version: 'tags/1.0.0'
          file: 'opencc_linux.zip'
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: unzip opencc_linux.zip -d build/linux/x64/release/bundle/lib
      - name: Package linux build output
        run: tar -zcvf oneAnime_linux_${{ env.short_sha }}.tar.gz -C build/linux/x64/release/bundle .
        shell: bash

      - name: Upload linux outputs
        uses: actions/upload-artifact@v4
        with:
          name: linux_outputs
          path: oneAnime_linux_*.tar.gz

  release:
    name: "Release"
    runs-on: "ubuntu-latest"
    needs: [ flutter-build-linux ]
    permissions: write-all
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Extract short sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        shell: bash
      - name: Download linux build file
        uses: actions/download-artifact@v4
        with:
          name: linux_outputs
          path: linux_outputs
      - name: List files in linux_outputs directory
        run: ls -l linux_outputs
      - name: Copy linux build file to root
        run: cp linux_outputs/* oneAnime_linux_${{ env.short_sha }}.tar.gz

      - name: Create release
        uses: "softprops/action-gh-release@v2"
        with:
          name: "ice-tea-${{ env.short_sha }}"
          tag_name: "ice-tea-${{ env.short_sha }}"
          prerelease: true
          files: oneAnime_linux_*.tar.gz